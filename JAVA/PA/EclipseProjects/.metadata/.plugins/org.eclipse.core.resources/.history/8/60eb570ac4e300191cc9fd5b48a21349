import java.util.Scanner;

public class Funcao {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n1;
		int n2;
		int n3;
		
		//Asks for n1 and n2
		WriteLine("Insert a number: ");
		n1 = scan.nextInt();
		WriteLine("Insert a second number: ");
		n2 = scan.nextInt();
		WriteLine("");
		WriteLine("Insert a third number: ");
		n3 = scan.nextInt();
		WriteLine("");
		scan.close();
		
		//Display Results
		WriteLine("The sum of the numbers is : " + sum(n1,n2));
		WriteLine("The subtraction of the numbers is : " + subtract(n1,n2));
		WriteLine("The result of " + n1 + " multiplied by " + n2 + " is : " + multiply(n1,n2));
		WriteLine("The result of " + n1 + " multiplied by " + n1 + " is : " + multiply(n1,n1));
		WriteLine("The result of " + n1 + " divided by " + n2 + " is : " + divide(n1,n2));
		WriteLine("The result of " + n1 + " elevated times " + n2 + " is : " + elevated(n1,n2));
		WriteLine("The result of " + n1 + " rootsquare by " + n2 + " is : " + rootSquare(n1,n2));
		WriteLine("The result of quadratic using " + n1 + " " + n2 + " " + n3 + " is : " + quadratic(n1,n2,n3));
	}
	
	public static void WriteLine(String textToDisplay){
		System.out.println(textToDisplay);
	}
	/*
	 * Receives n1 and n2 and returns the sum of these numbers
	 */
	static int sum(int n1, int n2){
		return (n1+n2);
	}
	//  Receives n1 and n2 and returns the subtraction of these numbers
	static int subtract(int n1, int n2){
		return (n1-n2);
	}
	//  Receives n1 and n2 and returns the n1 multiplied by n2 times
	static int multiply(int n1, int n2){
		return (n1*n2);
	}
	//  Receives n1 and n2 and returns the division of the n1 by n2
	static int divide(int n1 , int n2){
		return (n1/n2);
	}
	//  Receives n1 and n2 and returns the n1 elevated by n2 times
	static int elevated(int n1 , int n2){
		int r = n1;
		for (int i = 0; i < n2 - 1; i++) {
			r *= n1;
			//Debug - WriteLine(String.valueOf(r));
		}
		return r;
	}
	//  Receives n1 and n2 and returns the n1 rootSquare of n2
	static int rootSquare(int n1 , int n2){
		for (int i = 0; i < n2 - 1; i++) {
			n1 /= n2;
			//Debug - WriteLine(String.valueOf(r));
			if (n1 == 0)
			{
				return n1;
			}
		}
		return n1;
	}
	static float quadratic(int n1, int n2, int n3)
	{
		float r1 = 0;
		float r2 = 0;
		r1 = divide(n2 + rootSquare((elevated(n2,2) + multiply(4, multiply(n1,n3))),2), multiply(2,n1));
		r2 = divide(n2 + rootSquare((elevated(n2,2) - multiply(4, multiply(n1,n3))),2), multiply(2,n1));
		return r1;
	}
}
